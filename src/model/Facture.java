package src.model;
import java.sql.DatabaseMetaData;
import java.sql.ResultSet;
import java.util.Date;
import javax.swing.JOptionPane;
import java.text.SimpleDateFormat;
import java.util.Date;
import src.dao.ConnectionProvider;

public class Facture {
    public int id_facture;
    public int id_location;
    
    public Facture(){
        id_facture=0;
        id_location=0;
    }
    public Facture(int id_location){
        id_facture=0;
        this.id_location=id_location;
    }
    
    
    
    
    public static void creerTable() {
    try {
        java.sql.Connection con = ConnectionProvider.orclConnection();
        if (con == null) return;

        DatabaseMetaData dbm = con.getMetaData();
        ResultSet tables = dbm.getTables(null, null, "Factures", null);

        if (!tables.next()) {
            String FactureTable = 
                "CREATE TABLE Factures (" +
                "idFacture NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY, " +
                "idLocation NUMBER, " +
                "FOREIGN KEY (idLocation) REFERENCES location(id_location))";
            ConnectionProvider.operations(FactureTable, "facture table created successfully");
           
        }
    } catch (Exception e) {
        JOptionPane.showMessageDialog(null, "Erreur: " + e.getMessage(), "Erreur", JOptionPane.ERROR_MESSAGE);
    }
}
    
    
    
    public void AjouterFacture(){
        String query="insert into Factures(idLocation) values ("+this.id_location+")";
        try {
            ConnectionProvider.operations(query, "");
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Erreur: " + e.getMessage(), "Erreur", JOptionPane.ERROR_MESSAGE);
        }
    
    
    
    
    }
public static void AfficherFacture(int idL) {
    int idFacture = -1;
    double prix = 0;
    float penalite = 0;

    String query1 = "SELECT idFacture FROM Facture WHERE idLocation = " + idL;

    try {
        ResultSet rs = ConnectionProvider.operations(query1, "");

        if (rs != null && rs.next()) {
            idFacture = rs.getInt("idFacture");
        }

        rs.getStatement().getConnection().close();

    } catch (Exception e) {
        JOptionPane.showMessageDialog(null, "Erreur: " + e.getMessage(), "Erreur", JOptionPane.ERROR_MESSAGE);
    }

    String query2 = "SELECT prix, penalite FROM Robes " +
                   "JOIN Location ON Location.id_robe = Robes.id " +
                   "WHERE idLocation = " + idL;

    try {
        ResultSet rs = ConnectionProvider.operations(query2, "");

        if (rs != null && rs.next()) {
            prix = rs.getDouble("prix");
            penalite = rs.getFloat("penalite");
        }

        rs.getStatement().getConnection().close();

    } catch (Exception e) {
        JOptionPane.showMessageDialog(null, "Erreur: " + e.getMessage(), "Erreur", JOptionPane.ERROR_MESSAGE);
    }

    double totalFacture = prix + penalite;

    SimpleDateFormat sdf = new SimpleDateFormat("dd/MM/yyyy");
    String dateAujourdHui = sdf.format(new Date());

    String factureDetails = """
                            ==================== FACTURE ====================
                            ID Facture: """ + idFacture +
                            "\nDate: " + dateAujourdHui +
                            "\nPrix: " + prix +
                            "\nPénalité: " + penalite +
                            "\n----------------------------------------------" +
                            "\nTotal Facture: " + totalFacture +
                            "\n=============================================";

    JOptionPane.showMessageDialog(null, factureDetails);
}


}
