/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/Classes/Class.java to edit this template
 */
package src.model;

import java.sql.DatabaseMetaData;
import src.dao.ConnectionProvider;
import static src.dao.ConnectionProvider.orclConnection;
import java.sql.PreparedStatement;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import java.sql.ResultSet;

public class Client {
    public int id;
    public String nom;
    public String prenom;
    public String adresse;
    public String email;
    public String tel;
    private String mdp;

    public Client() {
        this.id = 0;
        this.nom = "";
        this.prenom = "";
        this.adresse = "";
        this.email = "";
        this.tel = "";
        this.mdp="";
    }
     public Client(int id, String nom) {
        this.id = id;
        this.nom = nom;
    }


    

    public Client(int id, String nom, String prenom, String adresse, String email, String tel, String mdp) {
        this.id = id;
        this.nom = nom;
        this.prenom = prenom;
        this.adresse = adresse;
        this.email = email;
        this.tel = tel;
        this.mdp = mdp;
    }


public static void creerTable() {
    try {
 java.sql.Connection con = orclConnection(); 
        if (con == null) return;

        DatabaseMetaData dbm = con.getMetaData();
        ResultSet tables = dbm.getTables(null, null, "CLIENTS", null);

        if (!tables.next()) {
            String clientTable = "CREATE TABLE clients (" +
                    "id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY, " +
                    "nom VARCHAR2(50), " +
                    "prenom VARCHAR2(50), " +
                    "adresse VARCHAR2(255), " +
                    "email VARCHAR2(100) UNIQUE, " +
                    "tel VARCHAR2(20)"+
                    "mdp VARCHAR2(20)";
            ConnectionProvider.operations(clientTable, "clients table created successfully");
            inserer();
        }
    } catch (Exception e) {
        JOptionPane.showMessageDialog(null, "Erreur: " + e.getMessage(), "Erreur", JOptionPane.ERROR_MESSAGE);
    }
}
public static void inserer() {
    try {
        String q1 = "INSERT INTO clients (nom, prenom, adresse, email, tel,mdp) VALUES " +
                    "('Ben Mahmoud', 'Leïla', 'Rue des Jasmins, Sfax', 'leila.bm@email.com', '98765432','leila123')";
        String q2 = "INSERT INTO clients (nom, prenom, adresse, email, tel, mdp) VALUES " +
                    "('Al Fassi', 'Samira', 'Avenue Habib Bourguiba, Tunis', 'samira.fassi@email.com', '53426789','fassi123')";
        String q3 = "INSERT INTO clients (nom, prenom, adresse, email, tel, mdp) VALUES " +
                    "('Cherif', 'Yasmina', 'Rue Ibn Khaldoun, Kairouan', 'yasmina.cherif@email.com', '95674321','robe1234')";
        String q4 = "INSERT INTO clients (nom, prenom, adresse, email, tel, mdp) VALUES " +
                    "('Zouari', 'Nour', 'Quartier Ennassim, Sousse', 'nour.zouari@email.com', '54329876','nourzouari')";
        String q5 = "INSERT INTO clients (nom, prenom, adresse, email, tel, mdp) VALUES " +
                    "('Bensalem', 'Hiba', 'Route de La Marsa, Tunis', 'hiba.bensalem@email.com', '96543210','hibahiba')";

        ConnectionProvider.operations(q1, "");
        ConnectionProvider.operations(q2, "");
        ConnectionProvider.operations(q3, "");
        ConnectionProvider.operations(q4, "");
        ConnectionProvider.operations(q5, "");

    } catch (Exception e) {
        JOptionPane.showMessageDialog(null, "Erreur: " + e.getMessage(), "Erreur", JOptionPane.ERROR_MESSAGE);
    }
}

public void save() {
        String query = "INSERT INTO clients (nom, prenom, adresse, email, tel,mdp) " +
                "VALUES ('" + nom + "', '" + prenom + "', '" + adresse + "', '" + email + "', '" + tel + "', '" + mdp + "')";
        try {
            ConnectionProvider.operations(query, "registred successfully");
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Erreur: " + e.getMessage(), "Erreur", JOptionPane.ERROR_MESSAGE);
        }
    }
    

    public ArrayList<Client> getAllRecords() {
        ArrayList<Client> list = new ArrayList<>();
        try {
            ResultSet rs = ConnectionProvider.operations("SELECT * FROM clients", "");
            while (rs.next()) {
                int ide = rs.getInt("id");
                String nome = rs.getString("nom");
                String prenome = rs.getString("prenom");
                String adressee = rs.getString("adresse");
                String emaile = rs.getString("email");
                String tele = rs.getString("tel");
                String mdpe = rs.getString("mdp");

                Client c = new Client(ide, nome, prenome, adressee, emaile, tele, mdpe);
                list.add(c);
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Erreur: " + e.getMessage(), "Erreur", JOptionPane.ERROR_MESSAGE);
        }
        return list;
    }

    public void update() {
        String query = "UPDATE clients SET nom='" + nom + "', prenom='" + prenom + "', adresse='" + adresse + "', email='" + email + "', tel='" + tel + "', mdp='" + mdp + "' WHERE id=" + id;
        try {
            ConnectionProvider.operations(query, "updated successfully");
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Erreur: " + e.getMessage(), "Erreur", JOptionPane.ERROR_MESSAGE);
        }
    }

    public void delete() {
        String query = "DELETE FROM clients WHERE id=" + id;
        try {
            ConnectionProvider.operations(query, "deleted successfully");
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Erreur: " + e.getMessage(), "Erreur", JOptionPane.ERROR_MESSAGE);
        }
    }
    
    public static int getClientId(String prenom) {
    int id = -1;
    try {
         String query = "SELECT id FROM clients WHERE  prenom=?";
         java.sql.Connection connection = ConnectionProvider.orclConnection();
         PreparedStatement statement = connection.prepareStatement(query);
         statement.setString(1, prenom);
         ResultSet rs = statement.executeQuery();
         if (rs.next()) {
            id = rs.getInt("id");
        }
    } catch (Exception e) {
        JOptionPane.showMessageDialog(null, "Erreur lors de la récupération de l'ID du client : " + e.getMessage());
    }
    return id;
}

   public static boolean exists(int clientId) {
    String sql = "SELECT 1 FROM client WHERE id_client = ?";
    try (java.sql.Connection con = ConnectionProvider.orclConnection();
         PreparedStatement stmt = con.prepareStatement(sql)) {
        
        stmt.setInt(1, clientId);
        ResultSet rs = stmt.executeQuery();
        return rs.next();  // Retourne true si un résultat est trouvé
        
    } catch (Exception e) {
        e.printStackTrace();
        return false;
    }
}
}

